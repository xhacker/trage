#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys

print 'Trage | Version: Dawn 1 | CLI'
print 'Usage: trage_cli problem_source problem_id source_file\n'

if len(sys.argv) != 4:
    print 'Error: Arguments invalid.'
    sys.exit()

prob_source = sys.argv[1]
prob_id     = sys.argv[2]
source_file = sys.argv[3]

from judge_common import Judge

judge = Judge(prob_source, prob_id, source_file)

print '====================================================== Load Problem ============'
if judge.load():
    print 'Problem config file error, please report the bug to the developers.'
    sys.exit()

from prob_common import Problem
prob = Problem(prob_source, prob_id)
if prob.load():
    print 'Problem config file error, please report the bug to the developers.'
    sys.exit()
print 'Problem: %s (Problem source: "%s", id: %s)' % (prob.get_name(), prob_source, prob_id)


print '=========================================================== Compile ============'
print 'Compiling...'
compile_err = judge.compile()
if compile_err:
    print 'Compile failed. Error:'
    print compile_err
    sys.exit()
print 'Done.'


print '============================================================= Judge ============'
while True:
    tpoint_result = judge.judge()

    if tpoint_result == None:
        break

    if tpoint_result['error']:
        print 'Problem data file error.'
        sys.exit()
    
    str = '[ Test %2d ] [ %3s ]' % (tpoint_result['tpoint'], tpoint_result['status'])
    if tpoint_result['status'] in ['AC', 'WA']:
        str += ' [ Time: %.2fs/%.1fs ] [ Mem: %.2fM/%dM ]' % (tpoint_result['time'], tpoint_result['timelmt'],\
                                                              tpoint_result['mem'],  tpoint_result['memlmt'])
    print str
    
result = judge.get_result()
if result['AC'] == True:
    print '[ Result: %2d/%2d ] Accepted.' % (result['tpoint_correct'], result['tpoint_count'])
else:
    print '[ Result: %2d/%2d ] Not accepted.' % (result['tpoint_correct'], result['tpoint_count'])
